{
  "kind": "Template",
  "apiVersion": "v1",
  "metadata": {
    "name": "golang-template",
    "annotations": {
      "tags": "quickstart,golang",
      "iconClass": "icon-go-gopher"
    }
  },
  "labels": {
      "template": "golang",
      "app": "golang"
  },
  "objects": [
    {
      "kind": "Service",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "annotations": {
          "description": "Exposes and load balances the application pods"
        }
      },
      "spec": {
        "ports": [
          {
            "name": "web",
            "port": 8080,
            "targetPort": 8080
          }
        ],
        "selector": {
          "name": "${NAME}"
        }
      }
    },
    {
      "kind": "Route",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}"
      },
      "spec": {
        "host": "${APPLICATION_DOMAIN}",
        "to": {
          "kind": "Service",
          "name": "${NAME}"
        }
      }
    },
    {
      "kind": "ImageStream",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "annotations": {
          "description": "Keeps track of changes in the application image"
        }
      }
    },
    {
      "kind": "BuildConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "annotations": {
          "description": "Defines how to build the application"
        }
      },
      "spec": {
	"resources": {
		"limits": {
			"cpu": "1000m",
			"memory": "1Gi"
		}
	},
        "source": {
          "type": "Git",
          "git": {
            "uri": "${SOURCE_REPOSITORY_URL}",
            "ref": "${SOURCE_REPOSITORY_REF}"
          },
          "contextDir": "${CONTEXT_DIR}"
        },
        "strategy": {
          "type": "Source",
	  "sourceStrategy": {
            "from": {
              "kind": "ImageStreamTag",
              "name": "go-toolset-rhel7:${GOLANG_VERSION}"
            }
	  }
        },
        "output": {
          "to": {
            "kind": "ImageStreamTag",
            "name": "${NAME}:latest"
          }
        },
        "triggers": [
          {
            "type": "ConfigChange"
          },
          {
            "type": "GitHub",
            "github": {
              "secret": "${GITHUB_WEBHOOK_SECRET}"
            }
          }
        ]
      }
    },
    {
      "kind": "DeploymentConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "annotations": {
          "description": "Defines how to deploy the application server"
        }
      },
      "spec": {
        "strategy": {
          "type": "Recreate"
        },
        "triggers": [
          {
            "type": "ImageChange",
            "imageChangeParams": {
              "automatic": true,
              "containerNames": [
                "${NAME}"
              ],
              "from": {
                "kind": "ImageStreamTag",
                "name": "${NAME}:latest"
              }
            }
          },
          {
            "type": "ConfigChange"
          }
        ],
        "replicas": 1,
        "selector": {
          "name": "${NAME}"
        },
        "template": {
          "metadata": {
            "name": "${NAME}",
            "labels": {
              "name": "${NAME}"
            }
          },
          "spec": {
            "containers": [
              {
                "name": "${NAME}",
                "image": "${NAME}",
                "ports": [
                  {
                    "containerPort": 8080
                  }
                ]
              }
            ],
	    "serviceAccount": "${SERVICE_ACCOUNT}",
            "serviceAccountName": "${SERVICE_ACCOUNT}"
          }
        }
      }
    },
    {
    "apiVersion": "extensions/v1beta1",
    "kind": "Deployment",
    "metadata": {        
        "labels": {
            "app": "grafana"
        },
        "name": "grafana"
    },
    "spec": {
        "replicas": 1,        
        "selector": {
            "matchLabels": {
                "app": "grafana"
            }
        },
        "strategy": {
            "rollingUpdate": {
                "maxSurge": "25%",
                "maxUnavailable": "25%"
            },
            "type": "RollingUpdate"
        },
        "template": {
            "metadata": {
                "creationTimestamp": null,
                "labels": {
                    "app": "grafana"
                }
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "-config=/etc/grafana/grafana.ini"
                        ],
                        "image": "registry.redhat.io/openshift3/grafana:v3.11",
                        "imagePullPolicy": "Always",
                        "name": "grafana",
                        "ports": [
                            {
                                "containerPort": 3000,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "200m",
                                "memory": "200Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "100Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/grafana",
                                "name": "grafana-storage"
                            },
                            {
                                "mountPath": "/etc/grafana/provisioning/datasources",
                                "name": "grafana-datasources"
                            },
                            {
                                "mountPath": "/etc/grafana/provisioning/dashboards",
                                "name": "grafana-dashboards"
                            },                            
                            {
                                "mountPath": "/etc/grafana",
                                "name": "grafana-config"
                            },
                            {
                                "mountPath": "/var/lib/grafana/plugins",
                                "name": "grafana-plugin"                        
                            },
                            {
				"mountPath": "/grafana-dashboard-definitions/0/rbac-example",
                                "name": "grafana-dashboard-rbac-example"
			    }
                        ]
                    },
                    {
                        "args": [
                            "-provider=openshift",
                            "-https-address=:3000",
                            "-http-address=",
                            "-email-domain=*",
                            "-upstream=http://localhost:3001",                            
                            "-tls-cert=/etc/tls/private/tls.crt",
                            "-tls-key=/etc/tls/private/tls.key",
                            "-client-secret-file=/var/run/secrets/kubernetes.io/serviceaccount/token",
                            "-cookie-secret-file=/etc/proxy/secrets/session_secret",
                            "-openshift-service-account=grafana",
                            "-openshift-ca=/etc/pki/tls/cert.pem",
                            "-openshift-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt",
                            "-skip-auth-regex=^/metrics"
                        ],
                        "image": "registry.redhat.io/openshift3/oauth-proxy:v3.11",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "grafana-proxy",
                        "ports": [
                            {
                                "containerPort": 3000,
                                "name": "https",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/tls/private",
                                "name": "secret-grafana-tls"
                            },
                            {
                                "mountPath": "/etc/proxy/secrets",
                                "name": "secret-grafana-proxy"
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",                
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "grafana",
                "serviceAccountName": "grafana",
                "terminationGracePeriodSeconds": 30,
                "volumes": [
                    {
                        "emptyDir": {},
                        "name": "grafana-storage"
                    },
                    {
                        "name": "grafana-plugin",
                        "persistentVolumeClaim": {
                          "claimName": "grafana-plugin"
                        }
                    },
                    {
                        "name": "grafana-datasources",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "grafana-datasources"
                        }
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "grafana-dashboards"
                        },
                        "name": "grafana-dashboards"
                    },                    
                    {
                        "name": "grafana-config",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "grafana-config"
                        }
                    },
                    {
                        "name": "secret-grafana-tls",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "grafana-tls"
                        }
                    },
                    {
                        "name": "secret-grafana-proxy",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "grafana-proxy"
                        }
                    },
		    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "grafana-dashboard-rbac-example"
                        },
                        "name": "grafana-dashboard-rbac-example"
                    }
                ]
            }
        }
    }
  },
  {
    "apiVersion": "v1",
    "kind": "PersistentVolumeClaim",
    "metadata": {
        "name": "grafana-plugin"        
    },
    "spec": {
        "accessModes": [
            "ReadWriteOnce"
        ],
        "resources": {
            "requests": {
                "storage": "1Gi"
            }
        }        
    }    
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
        "annotations": {
            "service.alpha.openshift.io/serving-cert-secret-name": "grafana-tls"            
        },
        "creationTimestamp": null,
        "name": "grafana",
        "selfLink": "/api/v1/namespaces/openshift-monitoring/services/grafana"
    },
    "spec": {
        "ports": [
            {
                "name": "https",
                "port": 3000,
                "protocol": "TCP",
                "targetPort": "https"
            }
        ],
        "selector": {
            "app": "grafana"
        },
        "sessionAffinity": "None",
        "type": "ClusterIP"
    },
    "status": {
        "loadBalancer": {}
    }
  },
  {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
        "annotations": {
            "serviceaccounts.openshift.io/oauth-redirectreference.grafana": "{\"kind\":\"OAuthRedirectReference\",\"apiVersion\":\"v1\",\"reference\":{\"kind\":\"Route\",\"name\":\"grafana\"}}"
        },
        "creationTimestamp": null,
        "name": "grafana",
        "selfLink": "/api/v1/namespaces/openshift-monitoring/serviceaccounts/grafana"
    }
  },
  {
    "apiVersion": "route.openshift.io/v1",
    "kind": "Route",
    "metadata": {
        "name": "grafana",
        "selfLink": "/apis/route.openshift.io/v1/namespaces/openshift-monitoring/routes/grafana"
    },
    "spec": {
        "host": "",
        "port": {
            "targetPort": "https"
        },
        "tls": {
            "termination": "reencrypt"
        },
        "to": {
            "kind": "Service",
            "name": "grafana",
            "weight": 100
        },
        "wildcardPolicy": "None"
    },
    "status": {
        "ingress": null
    }
  }
  ],
  "parameters": [
    {
      "name": "SOURCE_REPOSITORY_URL",
      "description": "The URL of the repository with your application source code",
      "value": "https://github.com/ianwatsonrh/grafana-namespace-app.git"
    },
    {
      "name": "SOURCE_REPOSITORY_REF",
      "description": "Set this to a branch name, tag or other ref of your repository if you are not using the default branch"
    },
    {
      "name": "CONTEXT_DIR",
      "description": "Set this to the relative path to your project if it is not in the root of your repository",
      "value": "admin-app"
    },
    {
      "name": "APPLICATION_DOMAIN",
      "description": "The exposed hostname that will route to the Beego service",
      "value": ""
    },
    {
      "name": "GITHUB_WEBHOOK_SECRET",
      "description": "Github trigger secret.  A difficult to guess string encoded as part of the webhook URL.  Not encrypted.",
      "generate": "expression",
      "from": "[a-zA-Z0-9]{40}"
    },
    {
      "name": "NAME",
      "value": "admin-app"
    },
    {
      "name": "GOLANG_VERSION",
      "value": "latest"
    },
    {
      "name": "SERVICE_ACCOUNT",
      "value": "cluster-reader"
    }
  ]
}

